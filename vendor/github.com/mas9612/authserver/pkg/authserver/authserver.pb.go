// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/authserver/authserver.proto

package authserver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// CreateTokenRequest represents the request of CreateToken.
type CreateTokenRequest struct {
	// user is the username which want to be authenticate.
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// password is the credential of given user.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// orig_host is the hostname for which JWT token is valid.
	OrigHost             string   `protobuf:"bytes,3,opt,name=orig_host,json=origHost,proto3" json:"orig_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTokenRequest) Reset()         { *m = CreateTokenRequest{} }
func (m *CreateTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTokenRequest) ProtoMessage()    {}
func (*CreateTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b970e5b30bc31cb8, []int{0}
}

func (m *CreateTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTokenRequest.Unmarshal(m, b)
}
func (m *CreateTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTokenRequest.Marshal(b, m, deterministic)
}
func (m *CreateTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTokenRequest.Merge(m, src)
}
func (m *CreateTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTokenRequest.Size(m)
}
func (m *CreateTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTokenRequest proto.InternalMessageInfo

func (m *CreateTokenRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *CreateTokenRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateTokenRequest) GetOrigHost() string {
	if m != nil {
		return m.OrigHost
	}
	return ""
}

//*
// Token represents the response of CreateToken.
type Token struct {
	// token is the JWT token.
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_b970e5b30bc31cb8, []int{1}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//*
// ValidateTokenRequest represents the request of ValidateToken.
type ValidateTokenRequest struct {
	// token is the JWT token.
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateTokenRequest) Reset()         { *m = ValidateTokenRequest{} }
func (m *ValidateTokenRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateTokenRequest) ProtoMessage()    {}
func (*ValidateTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b970e5b30bc31cb8, []int{2}
}

func (m *ValidateTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateTokenRequest.Unmarshal(m, b)
}
func (m *ValidateTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateTokenRequest.Marshal(b, m, deterministic)
}
func (m *ValidateTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateTokenRequest.Merge(m, src)
}
func (m *ValidateTokenRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateTokenRequest.Size(m)
}
func (m *ValidateTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateTokenRequest proto.InternalMessageInfo

func (m *ValidateTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//*
// ValidateTokenResponse represents the response of ValidateToken.
type ValidateTokenResponse struct {
	// valid represents whether given token is valid or not.
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// user is the authenticated username.
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateTokenResponse) Reset()         { *m = ValidateTokenResponse{} }
func (m *ValidateTokenResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateTokenResponse) ProtoMessage()    {}
func (*ValidateTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b970e5b30bc31cb8, []int{3}
}

func (m *ValidateTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateTokenResponse.Unmarshal(m, b)
}
func (m *ValidateTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateTokenResponse.Marshal(b, m, deterministic)
}
func (m *ValidateTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateTokenResponse.Merge(m, src)
}
func (m *ValidateTokenResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateTokenResponse.Size(m)
}
func (m *ValidateTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateTokenResponse proto.InternalMessageInfo

func (m *ValidateTokenResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *ValidateTokenResponse) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateTokenRequest)(nil), "authserver.CreateTokenRequest")
	proto.RegisterType((*Token)(nil), "authserver.Token")
	proto.RegisterType((*ValidateTokenRequest)(nil), "authserver.ValidateTokenRequest")
	proto.RegisterType((*ValidateTokenResponse)(nil), "authserver.ValidateTokenResponse")
}

func init() { proto.RegisterFile("pkg/authserver/authserver.proto", fileDescriptor_b970e5b30bc31cb8) }

var fileDescriptor_b970e5b30bc31cb8 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x49, 0xde, 0xb7, 0xd2, 0x8e, 0x8a, 0x74, 0x88, 0x18, 0xe2, 0xbf, 0xba, 0x27, 0x29,
	0xd2, 0x45, 0xbd, 0xf5, 0x56, 0xbc, 0x78, 0x0e, 0xe2, 0x49, 0x90, 0x95, 0x2e, 0x69, 0x68, 0xcd,
	0xc4, 0xdd, 0x4d, 0xbc, 0xfb, 0x15, 0xfc, 0x68, 0x9e, 0xbc, 0xfb, 0x41, 0x64, 0x37, 0x25, 0x5d,
	0x6b, 0xf1, 0x36, 0x33, 0xcf, 0x2f, 0x3b, 0xf3, 0x3c, 0x81, 0xd3, 0x72, 0x9e, 0x71, 0x51, 0x99,
	0x99, 0x96, 0xaa, 0x96, 0xca, 0x2b, 0x47, 0xa5, 0x22, 0x43, 0x08, 0xab, 0x49, 0x72, 0x94, 0x11,
	0x65, 0x0b, 0xc9, 0x45, 0x99, 0x73, 0x51, 0x14, 0x64, 0x84, 0xc9, 0xa9, 0xd0, 0x0d, 0xc9, 0x04,
	0xe0, 0x8d, 0x92, 0xc2, 0xc8, 0x3b, 0x9a, 0xcb, 0x22, 0x95, 0x2f, 0x95, 0xd4, 0x06, 0x11, 0xfe,
	0x57, 0x5a, 0xaa, 0x38, 0x18, 0x04, 0xe7, 0xbd, 0xd4, 0xd5, 0x98, 0x40, 0xb7, 0x14, 0x5a, 0xbf,
	0x92, 0x9a, 0xc6, 0xa1, 0x9b, 0xb7, 0x3d, 0x1e, 0x42, 0x8f, 0x54, 0x9e, 0x3d, 0xce, 0x48, 0x9b,
	0xf8, 0x5f, 0x23, 0xda, 0xc1, 0x2d, 0x69, 0xc3, 0x8e, 0xa1, 0xe3, 0x1e, 0xc7, 0x08, 0x3a, 0xc6,
	0x16, 0xcb, 0x67, 0x9b, 0x86, 0x5d, 0x40, 0x74, 0x2f, 0x16, 0xf9, 0x74, 0xfd, 0x86, 0xcd, 0xf4,
	0x04, 0xf6, 0xd7, 0x68, 0x5d, 0x52, 0xa1, 0xa5, 0xc5, 0x6b, 0x2b, 0x38, 0xbc, 0x9b, 0x36, 0x4d,
	0x6b, 0x24, 0x5c, 0x19, 0xb9, 0xfa, 0x0c, 0x00, 0x26, 0x6d, 0x3e, 0xf8, 0x00, 0xdb, 0x5e, 0x02,
	0x78, 0x32, 0xf2, 0xd2, 0xfc, 0x1d, 0x4d, 0xd2, 0xf7, 0x75, 0xa7, 0xb0, 0xe4, 0xed, 0xe3, 0xeb,
	0x3d, 0x8c, 0xd8, 0x1e, 0xaf, 0x2f, 0x39, 0x59, 0x99, 0xbb, 0x63, 0xc7, 0xc1, 0x10, 0x9f, 0x61,
	0xf7, 0xc7, 0xbd, 0x38, 0xf0, 0xbf, 0xdf, 0x64, 0x3c, 0x39, 0xfb, 0x83, 0x68, 0xcc, 0xb2, 0x03,
	0xb7, 0xb1, 0xcf, 0x76, 0xec, 0xc6, 0x7a, 0x89, 0x8c, 0x83, 0xe1, 0xd3, 0x96, 0xfb, 0xab, 0xd7,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x14, 0xe8, 0xb6, 0x3c, 0x22, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthserverClient is the client API for Authserver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthserverClient interface {
	// CreateToken creates and returns new JWT token for requested identity.
	CreateToken(ctx context.Context, in *CreateTokenRequest, opts ...grpc.CallOption) (*Token, error)
	// ValidateToken validates given token and returns its validity.
	ValidateToken(ctx context.Context, in *ValidateTokenRequest, opts ...grpc.CallOption) (*ValidateTokenResponse, error)
}

type authserverClient struct {
	cc *grpc.ClientConn
}

func NewAuthserverClient(cc *grpc.ClientConn) AuthserverClient {
	return &authserverClient{cc}
}

func (c *authserverClient) CreateToken(ctx context.Context, in *CreateTokenRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/authserver.Authserver/CreateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authserverClient) ValidateToken(ctx context.Context, in *ValidateTokenRequest, opts ...grpc.CallOption) (*ValidateTokenResponse, error) {
	out := new(ValidateTokenResponse)
	err := c.cc.Invoke(ctx, "/authserver.Authserver/ValidateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthserverServer is the server API for Authserver service.
type AuthserverServer interface {
	// CreateToken creates and returns new JWT token for requested identity.
	CreateToken(context.Context, *CreateTokenRequest) (*Token, error)
	// ValidateToken validates given token and returns its validity.
	ValidateToken(context.Context, *ValidateTokenRequest) (*ValidateTokenResponse, error)
}

func RegisterAuthserverServer(s *grpc.Server, srv AuthserverServer) {
	s.RegisterService(&_Authserver_serviceDesc, srv)
}

func _Authserver_CreateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthserverServer).CreateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authserver.Authserver/CreateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthserverServer).CreateToken(ctx, req.(*CreateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authserver_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthserverServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authserver.Authserver/ValidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthserverServer).ValidateToken(ctx, req.(*ValidateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authserver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authserver.Authserver",
	HandlerType: (*AuthserverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateToken",
			Handler:    _Authserver_CreateToken_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _Authserver_ValidateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/authserver/authserver.proto",
}
